{"version":3,"sources":["components/landingpage.js","components/aboutus.js","components/contact.js","components/profile.js","components/searchforbooks.js","components/shoppingcart.js","components/wishlist.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","require","state","this","getItems","fetch","then","results","json","setState","data","style","width","margin","className","items","map","item","index","imageLink","col","shadow","height","expand","color","background","title","author","language","pages","border","colored","Component","About","Contact","Profile","Searchforbooks","Shoppingcart","Wishlist","Main","exact","path","component","App","scroll","value","onChange","label","expandable","expandableIcon","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kOA+DeA,GA7DIC,EAAQ,I,YAIrB,aAAe,IAAD,8BACV,+CAEKC,MAAQ,CACT,MAAS,IAJH,E,iFASZC,KAAKC,a,iCAGK,IAAD,OAEPC,MAAM,UACLC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAC,GAAO,OAAI,EAAKE,SAAS,CAAC,MAASF,EAAQG,Y,+BAKnD,OAEI,yBAAKC,MAAO,CAACC,MAAO,MAAOC,OAAQ,SAE/B,kBAAC,OAAD,CAAMC,UAAU,eACVX,KAAKD,MAAMa,MAAMC,KAAI,SAASC,EAAMC,GAC2DD,EAAKE,UAGtG,OAAO,kBAAC,OAAD,CAAMC,IAAK,GAAG,kBAAC,OAAD,CAAMC,OAAQ,EAAGV,MAAO,CAAEC,MAAO,QAASU,OAAQ,QAAST,OAAQ,SACpF,kBAAC,YAAD,CAAWU,QAAM,EAACZ,MAAO,CAAEa,MAAO,OAAQC,WAAY,iJAAkJR,EAAKS,OAC7M,kBAAC,WAAD,KACI,2BAAG,4CAAkBT,EAAKU,OAAvB,MACH,yCAAeV,EAAKW,SAApB,KACA,sCAAYX,EAAKY,MAAjB,KACA,qCAAWZ,EAAKY,MAAhB,MAEJ,kBAAC,cAAD,CAAaC,QAAM,GACf,kBAAC,SAAD,CAAQC,SAAO,GAAf,yB,GAzCFC,cCOXC,E,iLAPP,OACI,6BAAK,6C,GAHGD,aCSLE,E,iLAPN,OACG,6BAAK,+C,GAHKF,aCSPG,E,iLAPN,OACG,6BAAK,+C,GAHKH,aCSPI,E,iLAPN,OACG,6BAAK,qD,GAHYJ,aCSdK,E,iLAPN,OACG,6BAAK,kD,GAHUL,aCSZM,E,iLAPN,OACG,6BAAK,iD,GAHMN,aCwBRO,EAhBF,WACT,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1C,IACjC,kBAAC,IAAD,CAAOyC,KAAK,WAAWC,UAAWT,IAClC,kBAAC,IAAD,CAAOQ,KAAK,WAAWC,UAAWR,IAClC,kBAAC,IAAD,CAAOO,KAAK,WAAWC,UAAWP,IAClC,kBAAC,IAAD,CAAOM,KAAK,kBAAkBC,UAAWN,IACzC,kBAAC,IAAD,CAAOK,KAAK,gBAAgBC,UAAWL,IACvC,kBAAC,IAAD,CAAOI,KAAK,YAAYC,UAAWJ,M,iBCsBhCK,MAnCf,WACE,OACE,yBAAK7B,UAAU,oBACf,kBAAC,SAAD,KACI,kBAAC,SAAD,CAAQY,MAAM,WAAWkB,QAAM,GACvB,kBAAC,aAAD,KACC,kBAAC,YAAD,CACDC,MAAM,GACNC,SAAU,aACVC,MAAM,SACNC,YAAU,EACVC,eAAe,WAEX,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,iBAAT,iBACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,gBACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,gBAGR,kBAAC,SAAD,CAAQxB,MAAM,aACV,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAMwB,GAAG,mBAAT,oBACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,gBAGZ,kBAAC,UAAD,KACI,yBAAKpC,UAAU,iBACX,kBAAC,EAAD,UCtBIqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cCTNC,IAASC,OACN,kBAAC,IAAD,KACG,kBAAC,EAAD,OAGDC,SAASC,eAAe,SDqHvB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxD,MAAK,SAAAyD,GACjCA,EAAaC,iB","file":"static/js/main.6ecd0fee.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, CardTitle, CardText, CardActions, Button, Grid, Cell} from 'react-mdl';\r\nvar NumberFormat = require('react-number-format');\r\n\r\nclass LandingPage extends Component {\r\n    \r\n      constructor() {\r\n          super();\r\n          \r\n          this.state = {\r\n              'items': []\r\n          }\r\n      }\r\n    \r\n      componentDidMount() {\r\n        this.getItems();\r\n      }\r\n    \r\n      getItems() {\r\n          \r\n          fetch('/books')\r\n          .then(results => results.json())\r\n          .then(results => this.setState({'items': results.data}));\r\n    \r\n      }\r\n    \r\n    render() {\r\n        return (\r\n            \r\n            <div style={{width: '80%', margin: 'auto'}}>\r\n                \r\n                <Grid className=\"demo-grid-1\">\r\n                     {this.state.items.map(function(item, index) {\r\n                    let url = 'background: url(https://github.com/benoitvallon/100-best-books/blob/master/static/' + item.imageLink + ') bottom right 15% no-repeat #46B6AC';\r\n            \r\n            \r\n                    return <Cell col={4}><Card shadow={0} style={{ width: '320px', height: '620px', margin: 'auto'}}>\r\n                        <CardTitle expand style={{ color: '#fff', background: 'url(https://firstfreerockford.org/wp-content/uploads/2018/08/placeholder-book-cover-default.png) bottom right 15% no-repeat rgb(207,217,226)'}}>{item.title}</CardTitle>\r\n                        <CardText>\r\n                            <p><strong> Author: {item.author} </strong></p>\r\n                            <p> Language: {item.language} </p>\r\n                            <p> Pages: {item.pages} </p>\r\n                            <p> Year: {item.pages} </p>\r\n                        </CardText>\r\n                        <CardActions border>\r\n                            <Button colored>View Book</Button>\r\n                        </CardActions>\r\n                    </Card></Cell>\r\n                }\r\n                 \r\n                 )}\r\n                </Grid>\r\n              \r\n            </div>\r\n        \r\n        \r\n       \r\n        )\r\n    \r\n    }\r\n    \r\n}\r\n\r\nexport default LandingPage;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return(\r\n            <div><h1>About Us</h1></div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n         return(\r\n            <div><h1>Contact Us</h1></div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\n\r\nclass Profile extends Component {\r\n    render() {\r\n         return(\r\n            <div><h1>My Profile</h1></div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\n\r\nclass Searchforbooks extends Component {\r\n    render() {\r\n         return(\r\n            <div><h1>Search for Books</h1></div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Searchforbooks;","import React, { Component } from 'react';\r\n\r\nclass Shoppingcart extends Component {\r\n    render() {\r\n         return(\r\n            <div><h1>Shopping Cart</h1></div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Shoppingcart;","import React, { Component } from 'react';\r\n\r\nclass Wishlist extends Component {\r\n    render() {\r\n         return(\r\n            <div><h1>My Wish List</h1></div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Wishlist;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport LandingPage from './landingpage';\r\nimport About from './aboutus';\r\nimport Contact from './contact';\r\nimport Profile from './profile';\r\nimport Searchforbooks from './searchforbooks';\r\nimport Shoppingcart from './shoppingcart';\r\nimport Wishlist from './wishlist';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={LandingPage} />\r\n            <Route path=\"/aboutus\" component={About} />\r\n            <Route path=\"/contact\" component={Contact} />\r\n            <Route path=\"/profile\" component={Profile} />\r\n            <Route path=\"/searchforbooks\" component={Searchforbooks} />\r\n            <Route path=\"/shoppingcart\" component={Shoppingcart} />\r\n            <Route path=\"/wishlist\" component={Wishlist} />\r\n        \r\n        </Switch>\r\n    )\r\n    \r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport Main from './components/main';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content, Textfield} from 'react-mdl';\nimport { Link } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"demo-big-content\">\n    <Layout>\n        <Header title=\"GeekText\" scroll>\n                <Navigation>\n                 <Textfield\n                value=\"\"\n                onChange={() => {}}\n                label=\"Search\"\n                expandable\n                expandableIcon=\"search\"\n                    />\n                    <Link to=\"/\">Home</Link>\n                    <Link to=\"/shoppingcart\">Shopping Cart</Link>\n                    <Link to=\"/wishlist\">My Wish List</Link>\n                    <Link to=\"/profile\">My Profile</Link>\n            </Navigation>\n        </Header>\n            <Drawer title=\"Main Menu\">\n                <Navigation>\n                    <Link to=\"/searchforbooks\">Search for books</Link>\n                    <Link to=\"/aboutus\">About Us</Link>\n                    <Link to=\"/contact\">Contact Us</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n            <div className=\"page-content\" />\n                <Main/>\n        </Content>\n    </Layout>\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n   <BrowserRouter>\n      <App />\n    </BrowserRouter>\n      \n   , document.getElementById('root')\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}