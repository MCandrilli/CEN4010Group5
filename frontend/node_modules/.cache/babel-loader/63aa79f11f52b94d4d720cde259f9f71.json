{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adrie\\\\Desktop\\\\CEN\\\\CEN4010Group5\\\\frontend\\\\src\\\\components\\\\bookByAuthor.js\";\nimport React, { Component } from 'react';\nimport { Card, CardTitle, CardText, CardActions, Grid, Cell } from 'react-mdl';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'reactstrap';\nimport WishlistDropMenu from './wishlistdropmenu';\nimport { Link } from 'react-router-dom';\nimport { addToCart } from './shoppingcart';\nimport StarRatings from 'react-star-ratings';\n\nclass bookByAuthor extends Component {\n  constructor() {\n    super();\n\n    this.displayStarRating = rating => {\n      return /*#__PURE__*/React.createElement(StarRatings, {\n        rating: rating,\n        starRatedColor: \"goldenrod\",\n        numberOfStars: 5,\n        name: \"rating\",\n        starDimension: \"20px\",\n        starSpacing: \"2px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      });\n    };\n\n    this.state = {\n      'items': []\n    }; // this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.getItems();\n  }\n\n  getItems() {\n    fetch('/books/' + this.props.location.aboutProps.book.author).then(results => results.json()).then(results => this.setState({\n      'items': results.data\n    }));\n  } //Start Here -----------------------------------------------------------------------------------\n\n\n  getWishLists() {\n    fetch('/wishlists').then(results => results.json()).then(results => this.setState({\n      'wishlists': results.data\n    }));\n  }\n\n  handleClick(item) {\n    this.setState(prevState => ({\n      is_cart_toggle_on: !prevState.is_cart_toggle_on\n    }));\n    addToCart(item);\n  }\n\n  sendToCart(item) {\n    console.log(\"The helper function was called.\");\n    this.addToCart(item);\n  }\n\n  sortByTitle() {\n    let tempArray = [];\n    tempArray = this.state.items;\n    tempArray.sort(function (a, b) {\n      if (a.title > b.title) {\n        return 1;\n      }\n\n      if (b.title > a.title) {\n        return -1;\n      }\n\n      return 0;\n    });\n    this.setState({\n      'items': tempArray\n    });\n  }\n\n  sortByAuthor() {\n    let tempArray = [];\n    tempArray = this.state.items;\n    tempArray.sort(function (a, b) {\n      if (a.author > b.author) {\n        return 1;\n      }\n\n      if (b.author > a.author) {\n        return -1;\n      }\n\n      return 0;\n    });\n    this.setState({\n      'items': tempArray\n    });\n  }\n\n  sortByPages() {\n    let tempArray = [];\n    tempArray = this.state.items;\n    tempArray.sort(function (a, b) {\n      return parseInt(a.pages) - parseInt(b.pages);\n    });\n    this.setState({\n      'items': tempArray\n    });\n  }\n\n  sortByYear() {\n    let tempArray = [];\n    tempArray = this.state.items;\n    tempArray.sort(function (a, b) {\n      return parseInt(a.year) - parseInt(b.year);\n    });\n    this.setState({\n      'items': tempArray\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        boxShadow: \"0px 0px 5px 5px #ddd\",\n        backgroundColor: '#f0f0f0',\n        width: '85%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"info\",\n      style: {\n        margin: '5px'\n      },\n      onClick: this.sortByTitle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, \" SORT BY TITLE \"), /*#__PURE__*/React.createElement(Button, {\n      color: \"info\",\n      style: {\n        margin: '5px'\n      },\n      onClick: this.sortByAuthor.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, \" SORT BY AUTHOR \"), /*#__PURE__*/React.createElement(Button, {\n      color: \"info\",\n      style: {\n        margin: '5px'\n      },\n      onClick: this.sortByPages.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, \" SORT BY PAGES \"), /*#__PURE__*/React.createElement(Button, {\n      color: \"info\",\n      style: {\n        margin: '5px'\n      },\n      onClick: this.sortByYear.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, \" SORT BY YEAR PUBLISHED \"), /*#__PURE__*/React.createElement(Grid, {\n      className: \"demo-grid-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, this.state.items.map((item, index) => {\n      let imageUrl = 'https://raw.githubusercontent.com/benoitvallon/100-best-books/master/static/' + item.imageLink;\n      let lists = this.state.wishlists;\n      return /*#__PURE__*/React.createElement(Cell, {\n        col: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        shadow: 0,\n        style: {\n          width: '360px',\n          height: '720px',\n          margin: '50px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        expand: true,\n        style: {\n          color: '#fff',\n          background: 'url(' + imageUrl + ') center / cover rgb(207,217,226)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          lineHeight: '24px',\n          fontSize: '24px',\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 99\n        }\n      }, item.title, \" \")), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          lineHeight: '10px',\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 81\n        }\n      }, \" by: \", item.author, \" \")), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          lineHeight: '10px',\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 81\n        }\n      }, this.displayStarRating(item.rating), \" \")), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          lineHeight: '10px',\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 81\n        }\n      }, \" Rating Count: \", item.ratingCount, \" \")), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          lineHeight: '10px',\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 81\n        }\n      }, \" Genre: \", item.genre, \" \"))), /*#__PURE__*/React.createElement(CardActions, {\n        border: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: \"/bookdetails\",\n          aboutProps: {\n            book: item\n          }\n        },\n        style: {\n          textDecoration: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"info\",\n        style: {\n          marginLeft: '18%',\n          paddingLeft: '60px',\n          paddingRight: '60px',\n          marginBottom: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }\n      }, \"View Book Details\")), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: '10%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"success\",\n        style: {\n          float: 'left',\n          marginLeft: '20px'\n        },\n        onClick: () => this.handleClick(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 33\n        }\n      }, \"Add to Cart\"), /*#__PURE__*/React.createElement(WishlistDropMenu, {\n        style: {\n          float: 'left',\n          paddingLeft: '5px'\n        },\n        booktitle: item.title,\n        id: item._id,\n        lists: lists,\n        imageLink: item.imageLink,\n        price: item.price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 33\n        }\n      })))));\n    })));\n  } //End here -----------------------------------------------------------------------------------\n  // render(){\n  //     console.log(this.state.items )\n  //     // let test = '/books/' + this.props.location.aboutProps.book.author\n  //     //   console.log(test)\n  //     return (\n  //         <div>\n  //             <Grid className=\"demo-grid-1\">\n  //                 {this.state.items.map((item, index) => {\n  //                     let imageUrl = 'https://raw.githubusercontent.com/benoitvallon/100-best-books/master/static/' + item.imageLink;\n  //                     let lists = this.state.wishlists;\n  //                     return <Cell col={4}>\n  //                     <Card shadow={0} style={{ width: '360px', height: '720px', margin: '50px'}}>\n  //                         <CardTitle expand style={{ color: '#fff', background: 'url(' + imageUrl + ') center / cover rgb(207,217,226)'}}></CardTitle>\n  //                         <CardText>\n  //                             <p style={{lineHeight: '24px', fontSize: '24px', textAlign:\"center\"}}><strong>{item.title} </strong></p>\n  //                             <p style={{lineHeight: '10px', textAlign:\"center\"}}><strong> by: {item.author} </strong></p>\n  //                             <p style={{lineHeight: '10px', textAlign:\"center\"}}><strong> Rating Count: {item.ratingCount} </strong></p>\n  //                             <p style={{lineHeight: '10px', textAlign:\"center\"}}><strong> Genre: {item.genre} </strong></p>\n  //                         </CardText>\n  //                         <CardActions border>\n  //                             <Link to={{\n  //                                     pathname: \"/bookdetails\",\n  //                                     aboutProps:{\n  //                                     book: item\n  //                                 }\n  //                             }} style={{textDecoration: 'none'}}>\n  //                             <Button color=\"info\" style={{marginLeft: '18%', paddingLeft: '60px', paddingRight: '60px', marginBottom: '5px'}}>View Book Details</Button>\n  //                             </Link>\n  //                             <br/>\n  //                             <div style={{marginLeft:'10%'}}>\n  //                                 <Button color=\"success\" style={{float:'left', marginLeft:'20px'}} onClick = {() => this.handleClick(item)} >Add to Cart</Button>                            \n  //                                 {/* <WishlistDropMenu style={{float: 'left', paddingLeft:'5px'}} booktitle={item.title} id={item._id} lists={lists} imageLink={item.imageLink} price={item.price}/> */}\n  //                             </div>\n  //                         </CardActions>\n  //                     </Card>\n  //                      </Cell>\n  //                 }   \n  //                 )}\n  //             </Grid>\n  //         </div>\n  //     )\n  // }\n\n\n}\n\n;\nexport default bookByAuthor;","map":{"version":3,"sources":["C:/Users/adrie/Desktop/CEN/CEN4010Group5/frontend/src/components/bookByAuthor.js"],"names":["React","Component","Card","CardTitle","CardText","CardActions","Grid","Cell","Button","WishlistDropMenu","Link","addToCart","StarRatings","bookByAuthor","constructor","displayStarRating","rating","state","componentDidMount","getItems","fetch","props","location","aboutProps","book","author","then","results","json","setState","data","getWishLists","handleClick","item","prevState","is_cart_toggle_on","sendToCart","console","log","sortByTitle","tempArray","items","sort","a","b","title","sortByAuthor","sortByPages","parseInt","pages","sortByYear","year","render","boxShadow","backgroundColor","width","marginLeft","marginRight","marginTop","margin","bind","map","index","imageUrl","imageLink","lists","wishlists","height","color","background","lineHeight","fontSize","textAlign","ratingCount","genre","pathname","textDecoration","paddingLeft","paddingRight","marginBottom","float","_id","price"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, CardTitle, CardText, CardActions, Grid, Cell} from 'react-mdl';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Button} from 'reactstrap';\r\nimport WishlistDropMenu from './wishlistdropmenu';\r\nimport {Link} from 'react-router-dom';\r\nimport {addToCart} from './shoppingcart';\r\nimport StarRatings from 'react-star-ratings';\r\n\r\nclass bookByAuthor extends Component{\r\n    constructor() {\r\n        super();\r\n        \r\n        this.state = {\r\n            'items': []\r\n        }\r\n       // this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getItems();\r\n    }\r\n\r\n    getItems() {          \r\n        fetch('/books/' + this.props.location.aboutProps.book.author)\r\n        .then(results => results.json())\r\n        .then(results => this.setState({'items': results.data}));\r\n  \r\n    }\r\n\r\n\r\n\r\n\r\n//Start Here -----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n    getWishLists() {\r\n          \r\n        fetch('/wishlists')\r\n        .then(results => results.json())\r\n        .then(results => this.setState({'wishlists': results.data}));\r\n  \r\n    }\r\n\r\n      handleClick(item) {\r\n        this.setState(prevState => ({\r\n            is_cart_toggle_on: !prevState.is_cart_toggle_on\r\n        }));\r\n        addToCart(item);\r\n    }\r\n\r\n    displayStarRating = rating => {\r\n      return(\r\n      <StarRatings rating={rating} starRatedColor=\"goldenrod\" numberOfStars={5} name=\"rating\" starDimension=\"20px\" starSpacing=\"2px\"/>);\r\n    }\r\n\r\n    sendToCart(item) {\r\n        console.log(\"The helper function was called.\");\r\n        this.addToCart(item);\r\n    }\r\n    \r\n    sortByTitle(){\r\n        let tempArray =[];\r\n        tempArray = this.state.items;\r\n        tempArray.sort(function(a,b){\r\n          if (a.title >b.title){\r\n            return 1;\r\n          }\r\n          if (b.title > a.title){\r\n            return -1;\r\n          }\r\n          return 0\r\n        });\r\n        this.setState({'items' : tempArray})\r\n      }\r\n      sortByAuthor(){\r\n        let tempArray =[];\r\n        tempArray = this.state.items;\r\n        tempArray.sort(function(a,b){\r\n          if (a.author >b.author){\r\n            return 1;\r\n          }\r\n          if (b.author > a.author){\r\n            return -1;\r\n          }\r\n          return 0\r\n        });\r\n        this.setState({'items' : tempArray})\r\n      }\r\n\r\n      sortByPages(){\r\n        let tempArray =[];\r\n        tempArray = this.state.items;\r\n        tempArray.sort(function(a,b){\r\n          return parseInt(a.pages) - parseInt(b.pages)\r\n        });\r\n        this.setState({'items' : tempArray})\r\n      }\r\n      sortByYear(){\r\n        let tempArray =[];\r\n        tempArray = this.state.items;\r\n        tempArray.sort(function(a,b){\r\n          return parseInt(a.year) - parseInt(b.year)\r\n        });\r\n        this.setState({'items' : tempArray})\r\n      }\r\n    \r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            \r\n            <div style={{boxShadow: \"0px 0px 5px 5px #ddd\", backgroundColor: '#f0f0f0', width: '85%', marginLeft: 'auto', marginRight: 'auto', marginTop: '50px'}}>\r\n                  <Button color=\"info\" style={{margin: '5px'}} onClick = {this.sortByTitle.bind(this)}> SORT BY TITLE </Button>\r\n                  <Button color=\"info\" style={{margin: '5px'}} onClick = {this.sortByAuthor.bind(this)}> SORT BY AUTHOR </Button>\r\n                  <Button color=\"info\" style={{margin: '5px'}} onClick = {this.sortByPages.bind(this)}> SORT BY PAGES </Button>\r\n                  <Button color=\"info\" style={{margin: '5px'}} onClick = {this.sortByYear.bind(this)}> SORT BY YEAR PUBLISHED </Button>\r\n                <Grid className=\"demo-grid-1\">\r\n                     {this.state.items.map((item, index) => {\r\n                    let imageUrl = 'https://raw.githubusercontent.com/benoitvallon/100-best-books/master/static/' + item.imageLink;\r\n                    let lists = this.state.wishlists;\r\n            \r\n                    return <Cell col={4}>\r\n                        \r\n                        <Card shadow={0} style={{ width: '360px', height: '720px', margin: '50px'}}>\r\n                            \r\n                        <CardTitle expand style={{ color: '#fff', background: 'url(' + imageUrl + ') center / cover rgb(207,217,226)'}}></CardTitle>\r\n\r\n                        <CardText>\r\n                            <p style={{lineHeight: '24px', fontSize: '24px', textAlign:\"center\"}}><strong>{item.title} </strong></p>\r\n                            <p style={{lineHeight: '10px', textAlign:\"center\"}}><strong> by: {item.author} </strong></p>\r\n                            <p style={{lineHeight: '10px', textAlign:\"center\"}}><strong>{this.displayStarRating(item.rating)} </strong></p>\r\n                            <p style={{lineHeight: '10px', textAlign:\"center\"}}><strong> Rating Count: {item.ratingCount} </strong></p>\r\n                            <p style={{lineHeight: '10px', textAlign:\"center\"}}><strong> Genre: {item.genre} </strong></p>\r\n                        \r\n                        </CardText>\r\n\r\n                        <CardActions border>\r\n                            <Link to={{\r\n                                    pathname: \"/bookdetails\",\r\n                                    aboutProps:{\r\n                                    book: item\r\n                                }\r\n                            }} style={{textDecoration: 'none'}}>\r\n\r\n                            <Button color=\"info\" style={{marginLeft: '18%', paddingLeft: '60px', paddingRight: '60px', marginBottom: '5px'}}>View Book Details</Button>\r\n                            </Link>\r\n                            <br/>\r\n                                \r\n                            <div style={{marginLeft:'10%'}}>\r\n                                <Button color=\"success\" style={{float:'left', marginLeft:'20px'}} onClick = {() => this.handleClick(item)} >Add to Cart</Button>                            \r\n                                <WishlistDropMenu style={{float: 'left', paddingLeft:'5px'}} booktitle={item.title} id={item._id} lists={lists} imageLink={item.imageLink} price={item.price}/>\r\n                            </div>\r\n                        </CardActions>\r\n                    </Card>\r\n                        \r\n                    </Cell>\r\n                }   \r\n                 \r\n                 )}\r\n                 \r\n                </Grid>\r\n              \r\n            </div>\r\n        \r\n        \r\n       \r\n        )\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//End here -----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // render(){\r\n    //     console.log(this.state.items )\r\n    //     // let test = '/books/' + this.props.location.aboutProps.book.author\r\n    //     //   console.log(test)\r\n    //     return (\r\n            \r\n    //         <div>\r\n    //             <Grid className=\"demo-grid-1\">\r\n    //                 {this.state.items.map((item, index) => {\r\n    //                     let imageUrl = 'https://raw.githubusercontent.com/benoitvallon/100-best-books/master/static/' + item.imageLink;\r\n    //                     let lists = this.state.wishlists;\r\n    //                     return <Cell col={4}>\r\n    //                     <Card shadow={0} style={{ width: '360px', height: '720px', margin: '50px'}}>\r\n    //                         <CardTitle expand style={{ color: '#fff', background: 'url(' + imageUrl + ') center / cover rgb(207,217,226)'}}></CardTitle>\r\n    //                         <CardText>\r\n    //                             <p style={{lineHeight: '24px', fontSize: '24px', textAlign:\"center\"}}><strong>{item.title} </strong></p>\r\n    //                             <p style={{lineHeight: '10px', textAlign:\"center\"}}><strong> by: {item.author} </strong></p>\r\n    //                             <p style={{lineHeight: '10px', textAlign:\"center\"}}><strong> Rating Count: {item.ratingCount} </strong></p>\r\n    //                             <p style={{lineHeight: '10px', textAlign:\"center\"}}><strong> Genre: {item.genre} </strong></p>\r\n    //                         </CardText>\r\n    //                         <CardActions border>\r\n    //                             <Link to={{\r\n    //                                     pathname: \"/bookdetails\",\r\n    //                                     aboutProps:{\r\n    //                                     book: item\r\n    //                                 }\r\n    //                             }} style={{textDecoration: 'none'}}>\r\n    //                             <Button color=\"info\" style={{marginLeft: '18%', paddingLeft: '60px', paddingRight: '60px', marginBottom: '5px'}}>View Book Details</Button>\r\n    //                             </Link>\r\n    //                             <br/>\r\n                            \r\n    //                             <div style={{marginLeft:'10%'}}>\r\n    //                                 <Button color=\"success\" style={{float:'left', marginLeft:'20px'}} onClick = {() => this.handleClick(item)} >Add to Cart</Button>                            \r\n    //                                 {/* <WishlistDropMenu style={{float: 'left', paddingLeft:'5px'}} booktitle={item.title} id={item._id} lists={lists} imageLink={item.imageLink} price={item.price}/> */}\r\n    //                             </div>\r\n    //                         </CardActions>\r\n    //                     </Card>\r\n                    \r\n    //                      </Cell>\r\n    //                 }   \r\n    //                 )}\r\n                \r\n    //             </Grid>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n};\r\n\r\nexport default bookByAuthor;"]},"metadata":{},"sourceType":"module"}