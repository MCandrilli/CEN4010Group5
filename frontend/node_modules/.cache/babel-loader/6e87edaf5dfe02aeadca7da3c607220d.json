{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adrie\\\\Desktop\\\\CEN\\\\CEN4010Group5\\\\frontend\\\\src\\\\components\\\\customerReview.js\";\nimport React, { Component } from 'react';\nimport { Textfield, Button, Switch, CardText, Grid, Cell, Card } from 'react-mdl';\nimport Starrating from './starrating';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { browserHistory } from 'react-router';\n\nclass customerReview extends Component {\n  constructor() {\n    super();\n    this.state = {\n      'books': [],\n      value: '',\n      user: '',\n      rating: 1,\n      checked: false,\n      isLoggedUser: true,\n      bookIsPurchased: false,\n      checked: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAnonyousSwitch = this.handleAnonyousSwitch.bind(this);\n  }\n\n  componentDidMount() {\n    this.getItems();\n    console.log(this.state.checked);\n    this.setState({\n      checked: false\n    });\n  }\n\n  getItems() {\n    fetch('/comments').then(results => results.json()).then(results => this.setState({\n      'books': results.data\n    }));\n  }\n\n  handleSubmit() {\n    let userName = '';\n\n    if (this.state.checked === true) {\n      userName = \"Anonymous\";\n    } else {\n      userName = \"Generic User Name\";\n    }\n\n    console.log(this.props.location.aboutProps.book.title);\n    let submissiondata = {\n      \"title\": this.props.location.aboutProps.book.title,\n      \"Comments\": [{\n        \"User\": userName,\n        \"Comment\": this.state.value\n      }]\n    };\n    console.log(submissiondata);\n    fetch('/comments', {\n      method: 'POST',\n      body: JSON.stringify(submissiondata),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => console.log(data));\n  }\n\n  handleChange(event) {\n    console.log(event.target.value);\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleAnonyousSwitch() {\n    this.setState({\n      checked: !this.state.checked\n    });\n    console.log(this.state.checked);\n  }\n\n  render() {\n    const isLoggedIn = this.state.isLoggedUser;\n    const isPurchased = this.state.bookIsPurchased;\n    const commentdisabled = !this.state.isLoggedUser || !this.state.bookIsPurchased;\n    let errorMessage;\n    if (isLoggedIn && isPurchased) errorMessage = null;else if (isLoggedIn && !isPurchased) errorMessage = /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 61\n      }\n    }, \" Purchase book to comment \");else if (!isLoggedIn) errorMessage = /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 46\n      }\n    }, \" Log in to comment \");\n    let bookProps = this.props.location.aboutProps || {};\n    {\n      /*if props is not empty, load the page*/\n    }\n\n    if (bookProps.book) {\n      let imageUrl = 'https://raw.githubusercontent.com/benoitvallon/100-best-books/master/static/' + bookProps.book.imageLink;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '80%',\n          margin: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Cell, {\n        style: {\n          width: '50%'\n        },\n        align: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          alignItems: 'center'\n        },\n        src: imageUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Cell, {\n        align: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }\n      }, \" \", bookProps.book.title), /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }\n      }, \" by: \", bookProps.book.author))), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, \"Book Reviews\"), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"NewComment\",\n        style: {\n          width: '80%',\n          margin: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        style: {\n          margin: '10px'\n        },\n        onSubmit: this.handleSubmit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        ripple: true,\n        id: \"Anonymous\",\n        onChange: this.handleAnonyousSwitch.bind(this),\n        disabled: commentdisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }\n      }, \"Anonymous comment\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          margin: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Textfield, {\n        value: this.state.value,\n        onChange: this.handleChange,\n        label: \"Book Comments\",\n        style: {\n          width: '100%'\n        },\n        rows: 3,\n        maxLength: '200',\n        disabled: commentdisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Starrating, {\n        style: {\n          float: 'left'\n        },\n        disabled: commentdisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: \"/customerReview\",\n          aboutProps: {\n            book: bookProps.book\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button //disable if \n      , {\n        disabled: commentdisabled,\n        onClick: this.handleSubmit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 33\n        }\n      }, \"Submit Comment\"), errorMessage))), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }, \"Previous Comments\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, this.state.books.map(function (element) {\n        {\n          /* {find correct book} */\n        }\n\n        if (element.title === bookProps.book.title) {\n          {\n            /* {loop through nested array of user and comments} */\n          }\n          return element.Comments.map(function (comm) {\n            {\n              /* {Create cards for each user and its comment} */\n            }\n            return /*#__PURE__*/React.createElement(Card, {\n              shadow: 0,\n              key: comm.User,\n              style: {\n                width: '80%',\n                height: '10%',\n                margin: '50px'\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 44\n              }\n            }, /*#__PURE__*/React.createElement(CardText, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 41\n              }\n            }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 45\n              }\n            }, \" \", comm.User, \" : \\xA0 \"), \" \", comm.Comment, \" \")));\n          });\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }, \"NO BOOK PROPS :(\"), /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: \"/\"\n        },\n        style: {\n          textDecoration: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        colored: true,\n        style: {\n          marginLeft: '25%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      }, \"Back to Home Page\")), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 24\n        }\n      }));\n    }\n  }\n\n}\n\nexport default customerReview;","map":{"version":3,"sources":["C:/Users/adrie/Desktop/CEN/CEN4010Group5/frontend/src/components/customerReview.js"],"names":["React","Component","Textfield","Button","Switch","CardText","Grid","Cell","Card","Starrating","Typography","Link","browserHistory","customerReview","constructor","state","value","user","rating","checked","isLoggedUser","bookIsPurchased","handleChange","bind","handleAnonyousSwitch","componentDidMount","getItems","console","log","setState","fetch","then","results","json","data","handleSubmit","userName","props","location","aboutProps","book","title","submissiondata","method","body","JSON","stringify","headers","res","event","target","render","isLoggedIn","isPurchased","commentdisabled","errorMessage","color","bookProps","imageUrl","imageLink","width","margin","alignItems","author","float","pathname","books","map","element","Comments","comm","User","height","Comment","textDecoration","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Textfield, Button, Switch , CardText, Grid, Cell, Card} from 'react-mdl';\r\nimport Starrating from './starrating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from 'react-router-dom';\r\nimport { browserHistory } from 'react-router';\r\n\r\n\r\nclass customerReview extends Component {\r\n\r\n    constructor() {    \r\n        super();          \r\n\r\n        this.state = {\r\n            'books': [],\r\n            value: '',\r\n            user: '',\r\n            rating: 1,\r\n            checked: false,\r\n            isLoggedUser : true,\r\n            bookIsPurchased : false,\r\n            checked: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);       \r\n        this.handleAnonyousSwitch = this.handleAnonyousSwitch.bind(this);\r\n    }\r\n      \r\n    componentDidMount() {\r\n      this.getItems();\r\n      console.log(this.state.checked);\r\n      this.setState({\r\n          checked: false\r\n      });\r\n    }\r\n  \r\n    getItems() {\r\n        \r\n        fetch('/comments')\r\n        .then(results => results.json())\r\n        .then(results => this.setState({'books': results.data}));\r\n  \r\n    }\r\n   \r\n    handleSubmit() {\r\n\r\n        let userName = '';\r\n        if (this.state.checked === true){\r\n            userName = \"Anonymous\";\r\n        } else {\r\n            userName = \"Generic User Name\";\r\n        }\r\n        console.log(this.props.location.aboutProps.book.title);\r\n\r\n        let submissiondata = {\r\n                 \r\n            \"title\": this.props.location.aboutProps.book.title,\r\n            \"Comments\" :\r\n            [\r\n                {\r\n                    \"User\" : userName,\r\n                    \"Comment\" : this.state.value\r\n                }\r\n            ]\r\n        }\r\n        console.log(submissiondata);\r\n        fetch('/comments', {\r\n            method: 'POST',\r\n            body: JSON.stringify(submissiondata),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => console.log(data));  \r\n    }\r\n \r\n    handleChange(event) {\r\n        console.log(event.target.value)\r\n        this.setState({value: event.target.value});\r\n      }\r\n    handleAnonyousSwitch()\r\n    {\r\n        this.setState({checked: !this.state.checked});\r\n        console.log(this.state.checked)\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = this.state.isLoggedUser;\r\n        const isPurchased = this.state.bookIsPurchased;\r\n        const commentdisabled = !this.state.isLoggedUser || !this.state.bookIsPurchased;\r\n        let errorMessage;\r\n\r\n        if(isLoggedIn && isPurchased) errorMessage = null;\r\n        else if (isLoggedIn && !isPurchased) errorMessage = <span style = {{color:'red'}}  > Purchase book to comment </span>\r\n        else if (!isLoggedIn) errorMessage = <span style = {{color:'red'}}  > Log in to comment </span>\r\n\r\n        let bookProps = this.props.location.aboutProps || {}    \r\n        {/*if props is not empty, load the page*/}\r\n        if(bookProps.book)\r\n        { \r\n           let imageUrl = 'https://raw.githubusercontent.com/benoitvallon/100-best-books/master/static/' + bookProps.book.imageLink;\r\n        \r\n            return(          \r\n                <div style={{width: '80%', margin: 'auto'}}>  \r\n                    <Grid>\r\n                        <Cell style = {{width:'50%'}} align = 'middle'>\r\n                            <img style={{ alignItems:'center'}}src={imageUrl}/>\r\n                        </Cell>\r\n                        <Cell align = 'middle'>\r\n                            <br/>\r\n                            <h2> {bookProps.book.title}</h2>\r\n                            <strong> by: {bookProps.book.author}</strong>  \r\n                        </Cell>                            \r\n                    </Grid>   \r\n    \r\n                    <hr></hr>\r\n                    <h2>Book Reviews</h2>\r\n                    <div id = 'NewComment' style={{width: '80%', margin: 'auto'}}>\r\n                        <form style={{margin: '10px'}} onSubmit= {this.handleSubmit.bind(this)} >\r\n                            <Switch ripple id=\"Anonymous\" onChange={this.handleAnonyousSwitch.bind(this)} disabled = {commentdisabled}>Anonymous comment</Switch>\r\n                            <div style={{width: '100%', margin: 'auto'}}>  \r\n                                <Textfield  value= {this.state.value}\r\n                                    onChange={this.handleChange}                                \r\n                                    label=\"Book Comments\"\r\n                                    style={{width: '100%'}}\r\n                                    rows={3}                                \r\n                                    maxLength = {'200'}\r\n                                    disabled = {commentdisabled}\r\n                                    />  \r\n                                <Starrating style={{float:'left'}} disabled = {commentdisabled}/>  \r\n                            </div>   \r\n\r\n                            <Link to={{pathname:\"/customerReview\" , aboutProps:{ book: bookProps.book}}}>                            \r\n                                <Button \r\n                                //disable if \r\n                                    disabled={commentdisabled} \r\n                                    onClick = {this.handleSubmit.bind(this)} >Submit Comment\r\n                                </Button>\r\n                                {errorMessage}  \r\n                            </Link>                            \r\n                        </form>\r\n                    </div>   \r\n                    <hr></hr>\r\n\r\n                    <h4>Previous Comments</h4>\r\n                    <div>\r\n                        {/* {loop through bookS} */}\r\n                        {this.state.books.map(function(element){\r\n                        \r\n                        {/* {find correct book} */}\r\n                            if(element.title === bookProps.book.title)\r\n                            {\r\n                                {/* {loop through nested array of user and comments} */}\r\n                                return element.Comments.map(function(comm)\r\n                                {\r\n                                    {/* {Create cards for each user and its comment} */}\r\n                                    return <Card shadow={0} key={comm.User} style={{ width: '80%', height: '10%', margin: '50px'}}>\r\n                                    <CardText>\r\n                                        <p> <strong> {comm.User} : &nbsp; </strong> {comm.Comment} </p>\r\n                                    </CardText>\r\n                                    </Card>\r\n                                })\r\n                            }\r\n                        })}           \r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        }\r\n        else{return <div>\r\n            <h2>NO BOOK PROPS :(</h2>\r\n                <Link to={{pathname: \"/\"}} style={{textDecoration: 'none'}}> \r\n                    <Button colored style={{marginLeft:'25%'}}>Back to Home Page</Button>\r\n                </Link><br/>\r\n            </div>}       \r\n}\r\n}\r\nexport default customerReview;"]},"metadata":{},"sourceType":"module"}